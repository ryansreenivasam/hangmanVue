{"remainingRequest":"/Users/ryansreenivasam/Documents/USGSstuff/ProgrammingThings/vueTutorials/newexampleapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ryansreenivasam/Documents/USGSstuff/ProgrammingThings/vueTutorials/newexampleapp/src/components/JSONParser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ryansreenivasam/Documents/USGSstuff/ProgrammingThings/vueTutorials/newexampleapp/src/components/JSONParser.vue","mtime":1559921700308},{"path":"/Users/ryansreenivasam/Documents/USGSstuff/ProgrammingThings/vueTutorials/newexampleapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ryansreenivasam/Documents/USGSstuff/ProgrammingThings/vueTutorials/newexampleapp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ryansreenivasam/Documents/USGSstuff/ProgrammingThings/vueTutorials/newexampleapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ryansreenivasam/Documents/USGSstuff/ProgrammingThings/vueTutorials/newexampleapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ryansreenivasam/Documents/USGSstuff/ProgrammingThings/vueTutorials/newexampleapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport dictionary from \"../assets/dictionary.json\"\nexport default {\n    methods: {\n        check: function(){\n            //console.log(this.message + \"This is the message from parent\");\n            //this.word = \"SANDWICH\";\n            this.word = this.parseDict();\n            console.log(this.word + \" this is the word from the JSON\");\n            this.emitToParent(this.word);\n        },\n        parseDict: function() {\n            let obj_keys = Object.keys(dictionary);\n            let ran_key = obj_keys[Math.floor(Math.random() *obj_keys.length)];\n            let randDictWord = ran_key;\n            this.randDictDef = \"Definition:  \" + dictionary[ran_key];\n            return randDictWord;\n        },\n        emitToParent(event) {\n            this.$emit('childToParent', this.word);\n        }\n    },\n    mounted() {\n        this.check();\n    },\n    data() {\n        return {\n        word: \"HELLO\",\n        randDictDef: \"\"\n        };\n    },\n    name: \"JSONParser\",\n    props: ['message'] //signal to get a word\n};\n",{"version":3,"sources":["JSONParser.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JSONParser.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class = \"JSONParser\">\n        <!--input \n            id=\"child-input\" \n            type=\"text\" \n            name=\"msg\" \n            v-model=\"word\" \n            v-on:keyup=\"emitToParent\"-->\n        <h1> {{randDictDef}} </h1>\n    </div>\n</template>\n\n<script>\nimport dictionary from \"../assets/dictionary.json\"\nexport default {\n    methods: {\n        check: function(){\n            //console.log(this.message + \"This is the message from parent\");\n            //this.word = \"SANDWICH\";\n            this.word = this.parseDict();\n            console.log(this.word + \" this is the word from the JSON\");\n            this.emitToParent(this.word);\n        },\n        parseDict: function() {\n            let obj_keys = Object.keys(dictionary);\n            let ran_key = obj_keys[Math.floor(Math.random() *obj_keys.length)];\n            let randDictWord = ran_key;\n            this.randDictDef = \"Definition:  \" + dictionary[ran_key];\n            return randDictWord;\n        },\n        emitToParent(event) {\n            this.$emit('childToParent', this.word);\n        }\n    },\n    mounted() {\n        this.check();\n    },\n    data() {\n        return {\n        word: \"HELLO\",\n        randDictDef: \"\"\n        };\n    },\n    name: \"JSONParser\",\n    props: ['message'] //signal to get a word\n};\n</script>\n\n<style scoped>\n    h1{\n            font-size: 1em;\n        }\n</style>\n"]}]}